<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
	
   <!-- commons config -->
	<bean id="byteArraySerializer" class="org.apache.kafka.common.serialization.ByteArraySerializer"/>
	<bean id="stringSerializer" class="org.apache.kafka.common.serialization.StringSerializer"/>
	<bean id="kafkaEncoder" class="org.springframework.integration.kafka.serializer.avro.AvroReflectDatumBackedKafkaEncoder">
        <constructor-arg value="java.lang.String" />
    </bean>
	<bean id="producerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="topic.metadata.refresh.interval.ms">3600000</prop>
				<prop key="message.send.max.retries">5</prop>
				<prop key="serializer.class">kafka.serializer.StringEncoder</prop>
			 	<!-- <prop key="partitioner.class">com.wanrong.payment.commons.MyPartitioner</prop> -->
				<prop key="request.required.acks">-1</prop>
				<prop key="send.buffer.bytes">5242880</prop>
				<prop key="request.timeout.ms">10000</prop>
				<prop key="retry.backoff.ms">200</prop>
				<prop key="queue.buffering.max.ms">500</prop>
				<prop key="queue.buffering.max.messages">10000</prop>
				<prop key="value.serializer">org.apache.kafka.common.serialization.ByteArraySerializer</prop>
				<prop key="key.serializer">org.apache.kafka.common.serialization.ByteArraySerializer</prop>
			</props>
		</property>
	</bean>
	
	<!-- topic test config  -->
	
	<int:channel id="kafkaTopicTest">
		<int:queue />
	</int:channel>
	
	<int-kafka:outbound-channel-adapter
		id="kafkaOutboundChannelAdapterTopicTest" kafka-producer-context-ref="producerContextTopicTest"
		auto-startup="true" channel="kafkaTopicTest" order="3" >
		<int:poller fixed-delay="1000" time-unit="MILLISECONDS"
			receive-timeout="1" task-executor="taskExecutor" />
	</int-kafka:outbound-channel-adapter>
	<task:executor id="taskExecutor" pool-size="5"
		keep-alive="120" queue-capacity="500" />
	<!-- <bean id="kafkaEncoder"
		class="org.springframework.integration.kafka.serializer.avro.AvroSpecificDatumBackedKafkaEncoder">
		<constructor-arg value="com.company.AvroGeneratedSpecificRecord" />
	</bean> -->
	<int-kafka:producer-context id="producerContextTopicTest"
		producer-properties="producerProperties">
		<int-kafka:producer-configurations>
		    <!-- 多个topic配置 -->
			<int-kafka:producer-configuration
				broker-list="${bootstrap.servers}"
				 key-class-type="java.lang.String"
				key-serializer="stringSerializer"
                value-class-type="java.lang.String"
                value-serializer="stringSerializer"
				topic="test_replicated_topic" />
			<int-kafka:producer-configuration
				broker-list="${bootstrap.servers}"
				 key-class-type="java.lang.String"
				key-serializer="stringSerializer"
                value-class-type="java.lang.String"
                value-serializer="stringSerializer"
				topic="emailtopic" />
		</int-kafka:producer-configurations>
	</int-kafka:producer-context>
</beans>